name: CI for eProsima Integration Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  integration-service_CI:
    runs-on: ubuntu-20.04
    container: ros:foxy

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/integration-service

      - name: Download required dependencies
        run: |
          apt update
          DEBIAN_FRONTEND=noninteractive apt install -y curl git libboost-dev libboost-program-options-dev libyaml-cpp-dev libwebsocketpp-dev libssl-dev libcurlpp-dev libasio-dev libcurl4-openssl-dev

      - name: Download and install ROS 1 Noetic
        run: |
          echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list
          apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
          curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add -
          apt update && apt install -y ros-noetic-ros-base

      - name: Download xTypes
        run: |
          git clone --recursive https://github.com/eProsima/xtypes.git src/xtypes

      - name: Download the Integration Service Fast DDS SystemHandle
        run: |
          git clone https://github.com/eProsima/FastDDS-SH.git src/fastdds-sh

      - name: Download the Integration Service ROS 1 SystemHandle
        run: |
          git clone https://github.com/eProsima/ROS1-SH.git src/ros1-sh

      - name: Download the Integration Service ROS 2 SystemHandle
        run: |
          git clone https://github.com/eProsima/ROS2-SH.git src/ros2-sh

      - name: Download the Integration Service WebSocket SystemHandle
        run: |
          git clone https://github.com/eProsima/WebSocket-SH.git src/websocket-sh

      - name: Download the Integration Service FIWARE SystemHandle
        run: |
          git clone https://github.com/eProsima/FIWARE-SH.git src/fiware-sh

      - name: Build
        run: |
          . /opt/ros/foxy/setup.sh
          . /opt/ros/noetic/setup.sh
          colcon build --cmake-args -DCMAKE_BUILD_TYPE=DEBUG -DBUILD_TESTS=ON --event-handlers console_direct+

      - name: Test the Integration Service Core
        run: |
          . install/local_setup.sh
          colcon test --packages-select is-core --event-handlers console_direct+
          colcon test-result

      - name: Test the Integration Service Fast DDS SystemHandle
        run: |
          . /opt/ros/foxy/setup.sh
          . install/local_setup.sh
          colcon test --packages-select is-fastdds --event-handlers console_direct+
          colcon test-result

      - name: Test the Integration Service ROS 1 SystemHandle
        run: |
          . /opt/ros/noetic/setup.sh
          . install/local_setup.sh
          roscore & colcon test --packages-select is-ros1 is-ros1-test --event-handlers console_direct+
          colcon test-result

      - name: Test the Integration Service ROS 2 SystemHandle
        run: |
          . /opt/ros/foxy/setup.sh
          . install/local_setup.sh
          colcon test --packages-select is-ros2 is-ros2-test --event-handlers console_direct+
          colcon test-result

      - name: Test the Integration Service WebSocket SystemHandle
        run: |
          . install/local_setup.sh
          colcon test --packages-select is-websocket --event-handlers console_direct+
          colcon test-result

      #- name: Test the Integration Service FIWARE SystemHandle
      #  run: |
      #    . install/local_setup.sh
      #    colcon test --packages-select is-fiware --event-handlers console_direct+
      #    colcon test-result

  uncrustify:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/integration-service

      - name: Fetch all branches and tags
        run: |
          cd src/integration-service
          git fetch --prune --unshallow

      - name: Install uncrustify
        run: |
          git clone https://github.com/uncrustify/uncrustify.git \
            --branch uncrustify-0.71.0 \
            --single-branch uncrustify
          mkdir -p uncrustify/build
          cd uncrustify/build
          cmake ..
          sudo cmake --build . --target install
          cd ../..
          sudo rm -rf uncrustify

      - name: Clone ament_lint
        run: |
          git clone https://github.com/ament/ament_lint.git src/ament_lint

      - name: Build ament_uncrustify
        run: colcon build --packages-up-to ament_uncrustify

      - name: Fetch uncrustify config file
        run: |
          curl \
            -l https://raw.githubusercontent.com/eProsima/cpp-style/master/uncrustify.cfg \
            -o uncrustify.cfg

      - name: Get difference
        run: |
          cd src/integration-service
          echo "MODIFIED_FILES=$(git diff --name-only origin/${GITHUB_BASE_REF} origin/${GITHUB_HEAD_REF} | grep -e '\.h' -e '\.hpp' -e '\.cpp' | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Check difference
        run: |
          cd src/integration-service
          if [[ -z "${MODIFIED_FILES}" ]]
          then
            touch empty.hpp
            echo "MODIFIED_FILES=empty.hpp" >> $GITHUB_ENV
          fi

      - name: Check style
        run: |
          source install/local_setup.bash
          cd src/integration-service
          ament_uncrustify \
            -c ../../uncrustify.cfg \
            --language CPP \
            --xunit-file ../../uncrustify_results.xml \
            ${MODIFIED_FILES}

      - name: Upload uncrustify results
        uses: actions/upload-artifact@v1
        with:
          name: uncrustify_results
          path: uncrustify_results.xml
